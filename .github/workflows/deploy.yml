name: Auto Deploy to Aliyun Server

on:
  push:
    branches: [ master ]
  workflow_dispatch:  # 允许手动触发

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create deployment package
      run: |
        # 创建部署包（排除不需要的文件）
        tar --exclude='.git' \
            --exclude='.github' \
            --exclude='*.md' \
            --exclude='check-status.sh' \
            -czf railway-py.tar.gz .
        
    - name: Copy code to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.ALIYUN_HOST }}
        username: ${{ secrets.ALIYUN_USER }}
        key: ${{ secrets.ALIYUN_SSH_KEY }}
        port: ${{ secrets.ALIYUN_PORT }}
        source: "railway-py.tar.gz"
        target: "/tmp/"
        
    - name: Deploy to Aliyun Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.ALIYUN_HOST }}
        username: ${{ secrets.ALIYUN_USER }}
        key: ${{ secrets.ALIYUN_SSH_KEY }}
        port: ${{ secrets.ALIYUN_PORT }}
        script: |
          set -e  # 遇到错误立即退出
          
          echo "========================================="
          echo "开始部署 Railway-PY 应用..."
          echo "当前用户: $(whoami)"
          echo "当前目录: $(pwd)"
          echo "========================================="
          
          # 检查Docker是否安装和运行
          echo "检查Docker状态..."
          docker --version || { echo "❌ Docker未安装"; exit 1; }
          docker info > /dev/null 2>&1 || { echo "❌ Docker服务未运行"; exit 1; }
          echo "✅ Docker状态正常"
          
          # 创建部署目录
          echo "准备部署目录..."
          mkdir -p /opt/railway-py
          cd /opt/railway-py
          
          # 提取代码
          echo "提取代码..."
          if [ -f "/tmp/railway-py.tar.gz" ]; then
            tar -xzf /tmp/railway-py.tar.gz -C /opt/railway-py
            rm -f /tmp/railway-py.tar.gz
            echo "✅ 代码提取成功"
          else
            echo "❌ 代码包不存在"
            exit 1
          fi
          
          # 检查关键文件
          echo "检查关键文件..."
          [ -f "Dockerfile" ] || { echo "❌ Dockerfile不存在"; exit 1; }
          [ -f "requirements.txt" ] || { echo "❌ requirements.txt不存在"; exit 1; }
          echo "✅ 关键文件检查通过"
          
          # 停止并删除现有容器
          echo "停止现有容器..."
          if docker ps -q -f name=railway-py; then
            docker stop railway-py && echo "✅ 容器已停止"
          else
            echo "ℹ️ 没有运行中的容器"
          fi
          
          if docker ps -aq -f name=railway-py; then
            docker rm railway-py && echo "✅ 容器已删除"
          else
            echo "ℹ️ 没有需要删除的容器"
          fi
          
          # 删除旧镜像
          echo "删除旧镜像..."
          if docker images -q railway-py:latest; then
            docker rmi railway-py:latest && echo "✅ 旧镜像已删除"
          else
            echo "ℹ️ 没有旧镜像需要删除"
          fi
          
          # 构建新镜像
          echo "构建Docker镜像..."
          docker build -t railway-py:latest . || { echo "❌ 镜像构建失败"; exit 1; }
          echo "✅ 镜像构建成功"
          
          # 运行新容器
          echo "启动新容器..."
          docker run -d \
            --name railway-py \
            --restart unless-stopped \
            -p 8000:8000 \
            railway-py:latest || { echo "❌ 容器启动失败"; exit 1; }
          echo "✅ 容器启动成功"
          
          # 等待服务启动
          echo "等待服务启动..."
          sleep 15
          
          # 检查容器状态
          echo "检查容器状态..."
          docker ps | grep railway-py || { echo "❌ 容器未在运行"; docker logs railway-py; exit 1; }
          echo "✅ 容器运行正常"
          
          # 测试服务
          echo "测试服务..."
          for i in {1..5}; do
            if curl -f http://localhost:8000/ping; then
              echo "✅ 服务响应正常"
              break
            else
              echo "⏳ 第${i}次测试失败，等待重试..."
              sleep 5
            fi
          done
          
          # 显示最终状态
          echo "========================================="
          echo "部署完成！最终状态："
          echo "容器状态:"
          docker ps | grep railway-py
          echo "容器日志（最后10行）:"
          docker logs --tail 10 railway-py
          echo "========================================="